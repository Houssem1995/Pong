package game;

import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class JframePong extends javax.swing.JFrame {

    private class PongLauncher extends Thread {
        private String host;
        private int port;

        public PongLauncher(String host, int port) {
            this.host = host;
            this.port = port;
        }

        @Override
        public void run() {
            Pong pong = new Pong();

            try {
                pong.setDistantHost(host);
                pong.setDistantPort(port);
            } catch (UnknownHostException ex) {
                return;
            }

            pong.start();
        }
    }

    private class MirrorPongLauncher extends Thread {
        private int port;
        private int nb_games;

        public MirrorPongLauncher(int port, int nb_games) {
            this.port = port;
            this.nb_games = nb_games;
        }

        @Override
        public void run() {
            MirrorPong pong = new MirrorPong();

            pong.setPort(port);
            pong.setMaxPoints(nb_games);

            pong.start();
        }
    }


    /** Creates new form JframePong */
    public JframePong() {
        initComponents();

        setVisible(true);
        setTitle("Pong");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /************************************************************************
     * **********************************************************************
     ************************************************************************/
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jl_title = new javax.swing.JLabel();
        Bouton_Valider = new javax.swing.JButton();
        Bouton_Quitter = new javax.swing.JButton();
        ComboServerOrClient = new javax.swing.JComboBox();
        jl_choice = new javax.swing.JLabel();
        tf_host = new javax.swing.JTextField();
        jl_host = new javax.swing.JLabel();
        jl_port = new javax.swing.JLabel();
        jl_nb_games = new javax.swing.JLabel();
        js_nb_games = new javax.swing.JSpinner();
        js_port = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 0));
        setBounds(new java.awt.Rectangle(500, 200, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 102, 0));

        jl_title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jl_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_title.setText("Super Pong");

        Bouton_Valider.setText("Go !!");
        Bouton_Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_ValiderActionPerformed(evt);
            }
        });

        Bouton_Quitter.setText("Quitter");
        Bouton_Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_QuitterActionPerformed(evt);
            }
        });

        ComboServerOrClient.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Serveur", "Client", "Les Deux" }));
        ComboServerOrClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboServerOrClientActionPerformed(evt);
            }
        });

        jl_choice.setText("Choix");

        tf_host.setText("localhost");

        jl_host.setText("Hôte");

        jl_port.setText("Port");

        jl_nb_games.setText("Nombre de jeux");

        js_nb_games.setValue(5);

        js_port.setValue(6000);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(Bouton_Quitter)
                        .addGap(65, 65, 65)
                        .addComponent(Bouton_Valider, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jl_port)
                            .addComponent(jl_nb_games)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jl_choice)
                                .addComponent(jl_host)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tf_host, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(ComboServerOrClient, javax.swing.GroupLayout.Alignment.LEADING, 0, 251, Short.MAX_VALUE)
                            .addComponent(js_nb_games, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(js_port, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboServerOrClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_choice))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_host))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_port)
                    .addComponent(js_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_nb_games)
                    .addComponent(js_nb_games, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bouton_Valider)
                    .addComponent(Bouton_Quitter))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bouton_ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_ValiderActionPerformed
        List<Thread> threads = new ArrayList<Thread>();
        int port, nb_games;
        
        //récuperation du choix dans la combo
        String serverOrClient = ComboServerOrClient.getSelectedItem().toString();

        // hôte
        String host = tf_host.getText();

        if(host.isEmpty()) {
            alert("Le champ hôte ne peut pas être vide.");
            return;
        }
        
        // port
        try {
            port = ((Integer) js_port.getValue()).intValue();
        } catch (Exception e) {
            alert("Port incorrect ");
            return;
        }

        // nombre de jeux
        try {
            nb_games = ((Integer) js_nb_games.getValue()).intValue();
        } catch (Exception e) {
            alert("Nombre de jeux incorrect ");
            return;
        }

        setVisible(false);

        //on verifie si on veut un serveur ou un client et on lance le jeu
        if (serverOrClient.equals("Serveur"))
            threads.add(new MirrorPongLauncher(port, 5));
        else if (serverOrClient.equals("Client"))
            threads.add(new PongLauncher(host, port));
        else {
            threads.add(new MirrorPongLauncher(port, nb_games));
            threads.add(new PongLauncher(host, port));
        }

        for(Thread t : threads)
            t.start();

        for(Thread t : threads) {
            try {
                t.join();
            } catch (InterruptedException ex) {

            }
        }

        setVisible(true);
    }//GEN-LAST:event_Bouton_ValiderActionPerformed

    private void ComboServerOrClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboServerOrClientActionPerformed
        boolean visible = !ComboServerOrClient.getSelectedItem().equals("Client");

        //si mode client : on ne peut pas changer le nombre de parties
        js_nb_games.setVisible(visible);
        jl_nb_games.setVisible(visible);
    }//GEN-LAST:event_ComboServerOrClientActionPerformed

    private void Bouton_QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_QuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Bouton_QuitterActionPerformed

    private void alert(String msg) {
        JOptionPane.showMessageDialog(this, msg);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        new JframePong();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bouton_Quitter;
    private javax.swing.JButton Bouton_Valider;
    private javax.swing.JComboBox ComboServerOrClient;
    private javax.swing.JLabel jl_choice;
    private javax.swing.JLabel jl_host;
    private javax.swing.JLabel jl_nb_games;
    private javax.swing.JLabel jl_port;
    private javax.swing.JLabel jl_title;
    private javax.swing.JSpinner js_nb_games;
    private javax.swing.JSpinner js_port;
    private javax.swing.JTextField tf_host;
    // End of variables declaration//GEN-END:variables
}
